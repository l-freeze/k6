version: '3.8'

services:
  influxdb:
    image: influxdb
    container_name: influxdb
    ports:
      - 8083:8083
      - 8086:8086
    volumes:
      - data-influx:/var/lib/influxdb
      - ./results:/output
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=k6
      - DOCKER_INFLUXDB_INIT_BUCKET=k6db
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=TOKEN_TOKEN

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - data-grafana:/var/lib/grafana
      - ./results:/output
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_AUTH_ANONYMOUS_ORG_ROLE=k6
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
  k6:
    #image: grafana/k6
    #image: loadimpact/k6
    build: .
    container_name: k6
    volumes:
      - ./results:/output
    environment:
      - K6_OUT=xk6-influxdb=http://influxdb:8086
      - K6_INFLUXDB_ORGANIZATION=k6
      - K6_INFLUXDB_BUCKET=k6db
      - K6_INFLUXDB_INSECURE=false
        # NOTE: This is an Admin token, it's not suggested to use this configuration in production.
        # Instead, use a Token with restricted privileges.
      - K6_INFLUXDB_TOKEN=TOKEN_TOKEN

volumes:
  data-influx:
  data-grafana:



#$ docker-compose run --rm k6 run -o xk6-influxdb=http://influxdb:8086/k6db - < script.js
#$ docker-compose run --rm k6 run -o json=/output/result.json -o xk6-influxdb=http://influxdb:8086/k6db - < script.js
